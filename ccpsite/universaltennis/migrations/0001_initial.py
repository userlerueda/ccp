# Generated by Django 4.1.2 on 2022-10-18 04:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "divisions",
                    models.ManyToManyField(to="universaltennis.division"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        primary_key=True, serialize=False
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "role",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "singles_utr",
                    models.DecimalField(
                        blank=True, decimal_places=14, max_digits=16, null=True
                    ),
                ),
                (
                    "rating_status_singles",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "rating_progress_singles",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "doubles_utr",
                    models.DecimalField(
                        blank=True, decimal_places=14, max_digits=16, null=True
                    ),
                ),
                (
                    "rating_status_doubles",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "rating_progress_doubles",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "my_utr_singles",
                    models.DecimalField(
                        blank=True, decimal_places=14, max_digits=16, null=True
                    ),
                ),
                (
                    "my_utr_status_singles",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "my_utr_progress_singles",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "my_utr_doubles",
                    models.DecimalField(
                        blank=True, decimal_places=14, max_digits=16, null=True
                    ),
                ),
                (
                    "my_utr_status_doubles",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "my_utr_progress_doubles",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "gender",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "my_utr_singles_reliability",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "my_utr_doubles_reliability",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "member_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "club_member_type_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
            options={
                "ordering": ("display_name",),
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "team_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=14,
                        editable=False,
                        max_digits=16,
                        null=True,
                    ),
                ),
                (
                    "division",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="universaltennis.division",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="universaltennis.event",
                    ),
                ),
                (
                    "players",
                    models.ManyToManyField(to="universaltennis.player"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        primary_key=True, serialize=False
                    ),
                ),
                ("actions", models.JSONField(default=dict)),
                (
                    "completion_type",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("club_ids", models.JSONField(blank=True, null=True)),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("event_draws", models.JSONField(blank=True, default=list)),
                (
                    "event_end_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("event_is_dual_match", models.BooleanField(default=False)),
                ("event_is_tms", models.BooleanField(default=False)),
                (
                    "event_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("exclude_from_rating", models.BooleanField(default=False)),
                (
                    "is_flex_league_event_player_post_draw",
                    models.BooleanField(default=False),
                ),
                ("is_rejected", models.BooleanField(default=False)),
                ("is_winner", models.BooleanField(default=False)),
                (
                    "outcome",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("players", models.JSONField(default=dict)),
                ("score", models.JSONField(default=dict)),
                (
                    "source_type",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "loser1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="loser1",
                        to="universaltennis.player",
                    ),
                ),
                (
                    "loser2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="loser2",
                        to="universaltennis.player",
                    ),
                ),
                (
                    "winner1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="winner1",
                        to="universaltennis.player",
                    ),
                ),
                (
                    "winner2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="winner2",
                        to="universaltennis.player",
                    ),
                ),
            ],
        ),
    ]
